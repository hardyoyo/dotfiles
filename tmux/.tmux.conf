# ` is an interesting key for a prefix
set-option -g prefix `
# set-option -g prefix C-a

unbind-key C-b
bind-key C-a last-window
bind-key ` last-window
bind-key a send-prefix

# we might need ` at some point, allow switching
# we can also send the prefix char with `-a
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix `

# 0 is too far from ` ;)
set -g base-index 1
set -g renumber-windows on

# set-option -g default-terminal "screen-256color"
###set-option -g mouse-select-pane on
set-option -g status-keys vi
set-option -g bell-action any
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell off

# not sure how this will interact, but it's worth a try
set -g visual-activity on

setw -g mode-keys vi
###setw -g mode-mouse on
setw -g monitor-activity on

bind e previous-window
bind f next-window
bind E swap-window -t -1
bind F swap-window -t +1
# bind j up-pane 
# bind k down-pane

# set-option -g status-utf8 on
# set-option -g status-justify centre
set-option -g status-justify left

set-option -g status-style 'bg=colour18 fg=colour137 dim'

# set-option -g status-bg black
# set-option -g status-fg white
# set-option -g status-left-length 40
# set-option -g status-right-length 80
#
# set-option -g pane-active-border-fg green
# set-option -g pane-active-border-bg black
# set-option -g pane-border-fg white
# set-option -g pane-border-bg black

# set-option -g message-fg black
# set-option -g message-bg green

# setw -g mode-bg black

setw -g window-status-bg black
setw -g window-status-current-fg green
# setw -g window-status-bell-attr default
# setw -g window-status-bell-fg red
# setw -g window-status-content-attr default
# setw -g window-status-content-fg yellow
# setw -g window-status-activity-attr default
# setw -g window-status-activity-fg yellow

set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'

# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

set -g status-interval 5
set -g status-right '#[fg=green]][#[fg=white] #(tmux-mem-cpu-load 5 4) #[fg=green]][ #[fg=yellow]%H:%M#[default]'

set -g history-limit 50000

bind r source-file ~/.tmux.conf


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/double/highcontrast'
# set -g @themepack 'powerline/double/gray'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-logging'


### not sure why the plugins aren't working, but here's a different powerline statusbar implementations

# set-option -g status on
# set-option -g status-interval 2
# set-option -g status-justify "centre"
# set-option -g status-left-length 60
# set-option -g status-right-length 90
# set-option -g status-left "#(~/.tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.tmux-powerline/powerline.sh right)"





# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
